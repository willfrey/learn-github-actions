name: Tests

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

  workflow_dispatch:

jobs:
  test-poetry-config:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - uses: snok/install-poetry@v1.2
      - run: poetry config --list
      - run: poetry config virtualenvs.create false
      - run: poetry config --list
      - run: poetry config virtualenvs.create true
      - run: poetry config --list
      - run: poetry config virtualenvs.in-project false
      - run: poetry config --list
      - run: poetry config virtualenvs.in-project true
      - run: poetry config --list

  tests:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        python-version: [3.8, 3.9]

    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: willfrey/install-poetry@v1.2
        with:
          virtualenvs-in-project: "false"

      - name: Print poetry config to stdout
        run: poetry config --list

      - name: Build wheel distribution
        run: poetry build --wheel
